#!/usr/bin/env bash

vm-up() {
  local name="${1}"
  if multipass info "${name}" &> /dev/null; then
    echo "${name} exists"
  else
    multipass launch --name "${name}" --mem 3g --cpus 2 --disk 15G 22.04
  fi
}

get-ip() {
  local name="${1}"
  multipass info "${name}" | grep "^IPv4:" | sed "s/IPv4:[ ]*//"
}

apend-key-to-authorized-keys() {
  local node="${1}"
  cat ./keys/key.pub | multipass transfer - "${node}":/tmp/key.pub
  multipass exec "${node}" -- bash -c 'LINE=$(cat /tmp/key.pub); DST=/home/ubuntu/.ssh/authorized_keys; grep -qF -- "${LINE}" "${DST}" || echo "${LINE}" >> "${DST}"'
}

# Create the nodes
vm-up "control-plane-node"
vm-up "kube-node-1"
vm-up "kube-node-2"

# Add ssh key to authorized_keys
apend-key-to-authorized-keys "control-plane-node"
apend-key-to-authorized-keys "kube-node-1"
apend-key-to-authorized-keys "kube-node-2"

# Create ansible inventory
echo "
control-plane-node ansible_ssh_host=$(get-ip "control-plane-node")
kube-node-1 ansible_ssh_host=$(get-ip "kube-node-1")
kube-node-2 ansible_ssh_host=$(get-ip "kube-node-2")

[nodes]
kube-node-1
kube-node-2
" > ./ansible/inventory
cd ansible
./bin/install-ansible-collections-and-roles
./bin/ansible-playbook 00-prequirements.yml
./bin/ansible-playbook 01-crio.yml
./bin/ansible-playbook 02-kube-install.yml
./bin/ansible-playbook 03-kube-cluster.yml
multipass exec control-plane-node -- sudo chmod +r /home/ubuntu/.kube/config
mkdir -p ~/.kube/
multipass transfer control-plane-node:/home/ubuntu/.kube/config - > ~/.kube/config
multipass exec control-plane-node -- sudo chmod 600 /home/ubuntu/.kube/config
echo -e "\nKubernetes cluster deployment and configuration ended"
echo -e "\nKubernetes cluster stutus"
kubectl get nodes
